На сервере должно быть три проекта:

Поднять собственную wiki на движке https://www.dokuwiki.org - доменное имя можно брать любое, только чтобы оно не было mysinet.net или example.com. Поскольку ip-адрес будет внешним, можете регистрировать домен на Фриноме и привязывать его к ip.
Википедию немного настроить "под себя". Сделать там свою учетную запись, через меню "настройки" выставить настройки безопасности (например, убрать возможность регистрации). Создать хоть одну статью и показать, что работают переходы по страницам.
На фронтенде этого виртуала должен быть nginx, на бэкенде apache с php-7.1 в режиме CGI. В php.ini выставить параметр memory_limit 512 M, показать это на странице через функцию  phpinfo(); Каталог DocumentRoot должен быть где-нибудь в /var/project/
Википедия не должна быть публичной, доступ прикрыть дополнительной авторизацией на стороне apache (.htaccess)
Сделать страницу с отображением server-status с подключением модуля remoteip и с дополнительной авторизацией на стороне nginx. Показать, что в качестве Client видно ip-адрес клиента, а не сервера.
Настроить gzip-сжатие текстовой статики. Можно на стороне nginx или на apache - выбирайте сами.
Второй проект - это wordpress с шаблоном для личного блога. Домен можно брать тот же, с приставкой blog. Или использовать абсолютно разные домены, если есть желание.
На фронтенде должен быть nginx, на бэкенде php-fpm с версией php-7.2, прокси на unix domain socket (/var/run/filename.sock).
Сайт должен работать от имени отдельного пользователя, у которого не будет ни оболочки shell ни дополнительных прав.
Файлы заливать по ftp с отдельным виртуальным пользователем, который будет храниться в базе sql. MySQL версии 5.6, должен слушать исключительно на localhost-е. Сделать субдомен с приставкой admin, куда развернуть phpmyadmin. Создать в MySQL двух пользователей и две базы. Первый пользователь с базой для ftp, а второй пользователь с базой для wordpress. Каждый пользователь должен иметь доступ только к своей базе и больше ни к чему. PHPmyadmin прикрыть дополнительной авторизацией на стороне nginx. Так же, на стороне nginx сделать дополнительную авторизацию на страницу /wp-admin.
Создать ещё один субдомен, назвать его munin. Пусть работает в режиме fastcgi, прикрыть авторизацию на стороне nginx. Прикрутить плагин nginx (stub_status), показать, что графики рисуются.
На все домены и субдомены сгенерировать ssl-сертификаты и прописать в конфиги. Используйте letsencrypt или самоподписанные сертификаты, на ваш выбор.
Вся работа выполняется на сервере с OS Centos. Версию выбирайте сами, но желательно по-новее. На почту прислать все доступы: для дополнительных авторизаций, для mysql root, mysql user1, mysql user2, wiki user, wordpress user, ssh и так далее.
